
menu 90.19 TSke&l.RSpec.after :call tskeleton#ExpandBitUnderCursor("n", 'after')<cr>
imenu 90.19 TSke&l.RSpec.after <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'after')<cr>
menu 90.19 TSke&l.etc.alias :call tskeleton#ExpandBitUnderCursor("n", 'alias')<cr>
imenu 90.19 TSke&l.etc.alias <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'alias')<cr>
menu 90.19 TSke&l.RSpec.and_raise :call tskeleton#ExpandBitUnderCursor("n", 'and_raise')<cr>
imenu 90.19 TSke&l.RSpec.and_raise <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'and_raise')<cr>
menu 90.19 TSke&l.RSpec.and_return :call tskeleton#ExpandBitUnderCursor("n", 'and_return')<cr>
imenu 90.19 TSke&l.RSpec.and_return <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'and_return')<cr>
menu 90.19 TSke&l.RSpec.and_throw :call tskeleton#ExpandBitUnderCursor("n", 'and_throw')<cr>
imenu 90.19 TSke&l.RSpec.and_throw <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'and_throw')<cr>
menu 90.19 TSke&l.RSpec.and_yield :call tskeleton#ExpandBitUnderCursor("n", 'and_yield')<cr>
imenu 90.19 TSke&l.RSpec.and_yield <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'and_yield')<cr>
menu 90.19 TSke&l.RSpec.any_number_of_times :call tskeleton#ExpandBitUnderCursor("n", 'any_number_of_times')<cr>
imenu 90.19 TSke&l.RSpec.any_number_of_times <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'any_number_of_times')<cr>
menu 90.19 TSke&l.Assertion.assert :call tskeleton#ExpandBitUnderCursor("n", 'assert')<cr>
imenu 90.19 TSke&l.Assertion.assert <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert')<cr>
menu 90.19 TSke&l.Assertion.assert_equal :call tskeleton#ExpandBitUnderCursor("n", 'assert_equal')<cr>
imenu 90.19 TSke&l.Assertion.assert_equal <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_equal')<cr>
menu 90.19 TSke&l.Assertion.assert_in_delta :call tskeleton#ExpandBitUnderCursor("n", 'assert_in_delta')<cr>
imenu 90.19 TSke&l.Assertion.assert_in_delta <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_in_delta')<cr>
menu 90.19 TSke&l.Assertion.assert_instance_of :call tskeleton#ExpandBitUnderCursor("n", 'assert_instance_of')<cr>
imenu 90.19 TSke&l.Assertion.assert_instance_of <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_instance_of')<cr>
menu 90.19 TSke&l.Assertion.assert_kind_of :call tskeleton#ExpandBitUnderCursor("n", 'assert_kind_of')<cr>
imenu 90.19 TSke&l.Assertion.assert_kind_of <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_kind_of')<cr>
menu 90.19 TSke&l.Assertion.assert_match :call tskeleton#ExpandBitUnderCursor("n", 'assert_match')<cr>
imenu 90.19 TSke&l.Assertion.assert_match <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_match')<cr>
menu 90.19 TSke&l.Assertion.assert_nil :call tskeleton#ExpandBitUnderCursor("n", 'assert_nil')<cr>
imenu 90.19 TSke&l.Assertion.assert_nil <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_nil')<cr>
menu 90.19 TSke&l.Assertion.assert_no_match :call tskeleton#ExpandBitUnderCursor("n", 'assert_no_match')<cr>
imenu 90.19 TSke&l.Assertion.assert_no_match <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_no_match')<cr>
menu 90.19 TSke&l.Assertion.assert_not_equal :call tskeleton#ExpandBitUnderCursor("n", 'assert_not_equal')<cr>
imenu 90.19 TSke&l.Assertion.assert_not_equal <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_not_equal')<cr>
menu 90.19 TSke&l.Assertion.assert_not_nil :call tskeleton#ExpandBitUnderCursor("n", 'assert_not_nil')<cr>
imenu 90.19 TSke&l.Assertion.assert_not_nil <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_not_nil')<cr>
menu 90.19 TSke&l.Assertion.assert_not_same :call tskeleton#ExpandBitUnderCursor("n", 'assert_not_same')<cr>
imenu 90.19 TSke&l.Assertion.assert_not_same <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_not_same')<cr>
menu 90.19 TSke&l.Assertion.assert_nothing_raised :call tskeleton#ExpandBitUnderCursor("n", 'assert_nothing_raised')<cr>
imenu 90.19 TSke&l.Assertion.assert_nothing_raised <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_nothing_raised')<cr>
menu 90.19 TSke&l.Assertion.assert_operator :call tskeleton#ExpandBitUnderCursor("n", 'assert_operator')<cr>
imenu 90.19 TSke&l.Assertion.assert_operator <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_operator')<cr>
menu 90.19 TSke&l.Assertion.assert_raise :call tskeleton#ExpandBitUnderCursor("n", 'assert_raise')<cr>
imenu 90.19 TSke&l.Assertion.assert_raise <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_raise')<cr>
menu 90.19 TSke&l.Assertion.assert_respond_to :call tskeleton#ExpandBitUnderCursor("n", 'assert_respond_to')<cr>
imenu 90.19 TSke&l.Assertion.assert_respond_to <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_respond_to')<cr>
menu 90.19 TSke&l.Assertion.assert_same :call tskeleton#ExpandBitUnderCursor("n", 'assert_same')<cr>
imenu 90.19 TSke&l.Assertion.assert_same <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_same')<cr>
menu 90.19 TSke&l.Assertion.assert_send :call tskeleton#ExpandBitUnderCursor("n", 'assert_send')<cr>
imenu 90.19 TSke&l.Assertion.assert_send <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_send')<cr>
menu 90.19 TSke&l.Assertion.assert_throws :call tskeleton#ExpandBitUnderCursor("n", 'assert_throws')<cr>
imenu 90.19 TSke&l.Assertion.assert_throws <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'assert_throws')<cr>
menu 90.19 TSke&l.RSpec.at_least :call tskeleton#ExpandBitUnderCursor("n", 'at_least')<cr>
imenu 90.19 TSke&l.RSpec.at_least <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'at_least')<cr>
menu 90.19 TSke&l.RSpec.at_most :call tskeleton#ExpandBitUnderCursor("n", 'at_most')<cr>
imenu 90.19 TSke&l.RSpec.at_most <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'at_most')<cr>
menu 90.19 TSke&l.etc.attr_accessor :call tskeleton#ExpandBitUnderCursor("n", 'attr_accessor')<cr>
imenu 90.19 TSke&l.etc.attr_accessor <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'attr_accessor')<cr>
menu 90.19 TSke&l.etc.attr_reader :call tskeleton#ExpandBitUnderCursor("n", 'attr_reader')<cr>
imenu 90.19 TSke&l.etc.attr_reader <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'attr_reader')<cr>
menu 90.19 TSke&l.etc.attr_writer :call tskeleton#ExpandBitUnderCursor("n", 'attr_writer')<cr>
imenu 90.19 TSke&l.etc.attr_writer <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'attr_writer')<cr>
menu 90.19 TSke&l.RSpec.be_an_instance_of :call tskeleton#ExpandBitUnderCursor("n", 'be_an_instance_of')<cr>
imenu 90.19 TSke&l.RSpec.be_an_instance_of <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'be_an_instance_of')<cr>
menu 90.19 TSke&l.RSpec.before :call tskeleton#ExpandBitUnderCursor("n", 'before')<cr>
imenu 90.19 TSke&l.RSpec.before <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'before')<cr>
menu 90.19 TSke&l.&begin.&begin :call tskeleton#ExpandBitUnderCursor("n", 'begin')<cr>
imenu 90.19 TSke&l.&begin.&begin <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'begin')<cr>
menu 90.19 TSke&l.&begin.begin_&ensure :call tskeleton#ExpandBitUnderCursor("n", 'begin_ensure')<cr>
imenu 90.19 TSke&l.&begin.begin_&ensure <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'begin_ensure')<cr>
menu 90.19 TSke&l.&begin.begin_&rescue :call tskeleton#ExpandBitUnderCursor("n", 'begin_rescue')<cr>
imenu 90.19 TSke&l.&begin.begin_&rescue <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'begin_rescue')<cr>
menu 90.19 TSke&l.&begin.begin_&until :call tskeleton#ExpandBitUnderCursor("n", 'begin_until')<cr>
imenu 90.19 TSke&l.&begin.begin_&until <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'begin_until')<cr>
menu 90.19 TSke&l.&begin.begin_&while :call tskeleton#ExpandBitUnderCursor("n", 'begin_while')<cr>
imenu 90.19 TSke&l.&begin.begin_&while <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'begin_while')<cr>
menu 90.19 TSke&l.RSpec.behaviour :call tskeleton#ExpandBitUnderCursor("n", 'behaviour')<cr>
imenu 90.19 TSke&l.RSpec.behaviour <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'behaviour')<cr>
menu 90.19 TSke&l.Benchmark.benchmark :call tskeleton#ExpandBitUnderCursor("n", 'benchmark')<cr>
imenu 90.19 TSke&l.Benchmark.benchmark <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'benchmark')<cr>
menu 90.20 TSke&l.case :call tskeleton#ExpandBitUnderCursor("n", 'case')<cr>
imenu 90.20 TSke&l.case <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'case')<cr>
menu 90.20 TSke&l.catch :call tskeleton#ExpandBitUnderCursor("n", 'catch')<cr>
imenu 90.20 TSke&l.catch <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'catch')<cr>
menu 90.19 TSke&l.collect.&collect :call tskeleton#ExpandBitUnderCursor("n", 'collect')<cr>
imenu 90.19 TSke&l.collect.&collect <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'collect')<cr>
menu 90.19 TSke&l.collect.collect_&do :call tskeleton#ExpandBitUnderCursor("n", 'collect_do')<cr>
imenu 90.19 TSke&l.collect.collect_&do <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'collect_do')<cr>
menu 90.19 TSke&l.RSpec.configure :call tskeleton#ExpandBitUnderCursor("n", 'configure')<cr>
imenu 90.19 TSke&l.RSpec.configure <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'configure')<cr>
menu 90.20 TSke&l.def :call tskeleton#ExpandBitUnderCursor("n", 'def')<cr>
imenu 90.20 TSke&l.def <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'def')<cr>
menu 90.19 TSke&l.etc.delete_if :call tskeleton#ExpandBitUnderCursor("n", 'delete_if')<cr>
imenu 90.19 TSke&l.etc.delete_if <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'delete_if')<cr>
menu 90.19 TSke&l.RSpec.describe :call tskeleton#ExpandBitUnderCursor("n", 'describe')<cr>
imenu 90.19 TSke&l.RSpec.describe <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'describe')<cr>
menu 90.19 TSke&l.RSpec.describe_shared :call tskeleton#ExpandBitUnderCursor("n", 'describe_shared')<cr>
imenu 90.19 TSke&l.RSpec.describe_shared <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'describe_shared')<cr>
menu 90.19 TSke&l.etc.detect :call tskeleton#ExpandBitUnderCursor("n", 'detect')<cr>
imenu 90.19 TSke&l.etc.detect <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'detect')<cr>
menu 90.20 TSke&l.do :call tskeleton#ExpandBitUnderCursor("n", 'do')<cr>
imenu 90.20 TSke&l.do <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'do')<cr>
menu 90.19 TSke&l.each.&each :call tskeleton#ExpandBitUnderCursor("n", 'each')<cr>
imenu 90.19 TSke&l.each.&each <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'each')<cr>
menu 90.19 TSke&l.each.each_&do :call tskeleton#ExpandBitUnderCursor("n", 'each_do')<cr>
imenu 90.19 TSke&l.each.each_&do <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'each_do')<cr>
menu 90.20 TSke&l.ensure :call tskeleton#ExpandBitUnderCursor("n", 'ensure')<cr>
imenu 90.20 TSke&l.ensure <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'ensure')<cr>
menu 90.19 TSke&l.RSpec.exactly_n_times :call tskeleton#ExpandBitUnderCursor("n", 'exactly_n_times')<cr>
imenu 90.19 TSke&l.RSpec.exactly_n_times <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'exactly_n_times')<cr>
menu 90.19 TSke&l.etc.find :call tskeleton#ExpandBitUnderCursor("n", 'find')<cr>
imenu 90.19 TSke&l.etc.find <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'find')<cr>
menu 90.19 TSke&l.etc.find_all :call tskeleton#ExpandBitUnderCursor("n", 'find_all')<cr>
imenu 90.19 TSke&l.etc.find_all <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'find_all')<cr>
menu 90.19 TSke&l.Assertion.flunk :call tskeleton#ExpandBitUnderCursor("n", 'flunk')<cr>
imenu 90.19 TSke&l.Assertion.flunk <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'flunk')<cr>
menu 90.20 TSke&l.for :call tskeleton#ExpandBitUnderCursor("n", 'for')<cr>
imenu 90.20 TSke&l.for <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'for')<cr>
menu 90.20 TSke&l.if :call tskeleton#ExpandBitUnderCursor("n", 'if')<cr>
imenu 90.20 TSke&l.if <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'if')<cr>
menu 90.19 TSke&l.etc.include :call tskeleton#ExpandBitUnderCursor("n", 'include')<cr>
imenu 90.19 TSke&l.etc.include <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'include')<cr>
menu 90.19 TSke&l.etc.inject :call tskeleton#ExpandBitUnderCursor("n", 'inject')<cr>
imenu 90.19 TSke&l.etc.inject <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'inject')<cr>
menu 90.19 TSke&l.RSpec.it :call tskeleton#ExpandBitUnderCursor("n", 'it')<cr>
imenu 90.19 TSke&l.RSpec.it <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'it')<cr>
menu 90.19 TSke&l.RSpec.it_should_behave_like :call tskeleton#ExpandBitUnderCursor("n", 'it_should_behave_like')<cr>
imenu 90.19 TSke&l.RSpec.it_should_behave_like <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'it_should_behave_like')<cr>
menu 90.20 TSke&l.loop :call tskeleton#ExpandBitUnderCursor("n", 'loop')<cr>
imenu 90.20 TSke&l.loop <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'loop')<cr>
menu 90.19 TSke&l.etc.map :call tskeleton#ExpandBitUnderCursor("n", 'map')<cr>
imenu 90.19 TSke&l.etc.map <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'map')<cr>
menu 90.19 TSke&l.RSpec.mock :call tskeleton#ExpandBitUnderCursor("n", 'mock')<cr>
imenu 90.19 TSke&l.RSpec.mock <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'mock')<cr>
menu 90.19 TSke&l.RSpec.once :call tskeleton#ExpandBitUnderCursor("n", 'once')<cr>
imenu 90.19 TSke&l.RSpec.once <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'once')<cr>
menu 90.19 TSke&l.RSpec.ordered :call tskeleton#ExpandBitUnderCursor("n", 'ordered')<cr>
imenu 90.19 TSke&l.RSpec.ordered <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'ordered')<cr>
menu 90.19 TSke&l.etc.partition :call tskeleton#ExpandBitUnderCursor("n", 'partition')<cr>
imenu 90.19 TSke&l.etc.partition <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'partition')<cr>
menu 90.19 TSke&l.RSpec.pending :call tskeleton#ExpandBitUnderCursor("n", 'pending')<cr>
imenu 90.19 TSke&l.RSpec.pending <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'pending')<cr>
menu 90.19 TSke&l.etc.reject :call tskeleton#ExpandBitUnderCursor("n", 'reject')<cr>
imenu 90.19 TSke&l.etc.reject <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'reject')<cr>
menu 90.19 TSke&l.Benchmark.report :call tskeleton#ExpandBitUnderCursor("n", 'report')<cr>
imenu 90.19 TSke&l.Benchmark.report <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'report')<cr>
menu 90.20 TSke&l.require :call tskeleton#ExpandBitUnderCursor("n", 'require')<cr>
imenu 90.20 TSke&l.require <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'require')<cr>
menu 90.20 TSke&l.rescue :call tskeleton#ExpandBitUnderCursor("n", 'rescue')<cr>
imenu 90.20 TSke&l.rescue <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'rescue')<cr>
menu 90.19 TSke&l.etc.select :call tskeleton#ExpandBitUnderCursor("n", 'select')<cr>
imenu 90.19 TSke&l.etc.select <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'select')<cr>
menu 90.19 TSke&l.Assertion.setup :call tskeleton#ExpandBitUnderCursor("n", 'setup')<cr>
imenu 90.19 TSke&l.Assertion.setup <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'setup')<cr>
menu 90.19 TSke&l.RSpec.should :call tskeleton#ExpandBitUnderCursor("n", 'should')<cr>
imenu 90.19 TSke&l.RSpec.should <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'should')<cr>
menu 90.19 TSke&l.RSpec.should_be_something :call tskeleton#ExpandBitUnderCursor("n", 'should_be_something')<cr>
imenu 90.19 TSke&l.RSpec.should_be_something <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'should_be_something')<cr>
menu 90.19 TSke&l.RSpec.should_not :call tskeleton#ExpandBitUnderCursor("n", 'should_not')<cr>
imenu 90.19 TSke&l.RSpec.should_not <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'should_not')<cr>
menu 90.19 TSke&l.RSpec.should_not_be_something :call tskeleton#ExpandBitUnderCursor("n", 'should_not_be_something')<cr>
imenu 90.19 TSke&l.RSpec.should_not_be_something <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'should_not_be_something')<cr>
menu 90.19 TSke&l.RSpec.should_not_receive :call tskeleton#ExpandBitUnderCursor("n", 'should_not_receive')<cr>
imenu 90.19 TSke&l.RSpec.should_not_receive <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'should_not_receive')<cr>
menu 90.19 TSke&l.RSpec.should_receive :call tskeleton#ExpandBitUnderCursor("n", 'should_receive')<cr>
imenu 90.19 TSke&l.RSpec.should_receive <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'should_receive')<cr>
menu 90.19 TSke&l.RSpec.should_receive_and_return :call tskeleton#ExpandBitUnderCursor("n", 'should_receive_and_return')<cr>
imenu 90.19 TSke&l.RSpec.should_receive_and_return <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'should_receive_and_return')<cr>
menu 90.19 TSke&l.RSpec.should_receive_with_and_return :call tskeleton#ExpandBitUnderCursor("n", 'should_receive_with_and_return')<cr>
imenu 90.19 TSke&l.RSpec.should_receive_with_and_return <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'should_receive_with_and_return')<cr>
menu 90.19 TSke&l.RSpec.times :call tskeleton#ExpandBitUnderCursor("n", 'times')<cr>
imenu 90.19 TSke&l.RSpec.times <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'times')<cr>
menu 90.19 TSke&l.RSpec.twice :call tskeleton#ExpandBitUnderCursor("n", 'twice')<cr>
imenu 90.19 TSke&l.RSpec.twice <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'twice')<cr>
menu 90.20 TSke&l.until :call tskeleton#ExpandBitUnderCursor("n", 'until')<cr>
imenu 90.20 TSke&l.until <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'until')<cr>
menu 90.19 TSke&l.RSpec.violated :call tskeleton#ExpandBitUnderCursor("n", 'violated')<cr>
imenu 90.19 TSke&l.RSpec.violated <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'violated')<cr>
menu 90.20 TSke&l.when :call tskeleton#ExpandBitUnderCursor("n", 'when')<cr>
imenu 90.20 TSke&l.when <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'when')<cr>
menu 90.20 TSke&l.while :call tskeleton#ExpandBitUnderCursor("n", 'while')<cr>
imenu 90.20 TSke&l.while <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", 'while')<cr>
menu 90.19 TSke&l.etc.{ :call tskeleton#ExpandBitUnderCursor("n", '{')<cr>
imenu 90.19 TSke&l.etc.{ <c-\><c-o>:call tskeleton#ExpandBitUnderCursor("i", '{')<cr>